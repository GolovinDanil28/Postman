{
	"info": {
		"_postman_id": "304a31d9-d698-42ed-9b83-600d632493bf",
		"name": "Home exercise №2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.collectionVariables.set(\"token\", \"token\");\r",
							"pm.environment.set(\"token\", jsonData.token);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "login",
							"value": "str",
							"type": "text"
						},
						{
							"key": "password",
							"value": "str",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/login",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"var jsonData = pm.response.json();\r",
							"var requestData =  JSON.parse(pm.request.body.raw);\r",
							"var schema = {\r",
							"    \"type\": \"object\" , \r",
							"    \"properties\": \r",
							"    {\r",
							"        \"person\": {\"type\" : \"object\"},\r",
							"        \"u_age\" : {\"type\": \"integer\"},\r",
							"        \"u_name\": {\"type\": \"array\"},\r",
							"        \"u_salary_1_5_year\": {\"type\": \"integer\"},\r",
							"        \"qa_salary_after_12_months\": {\"type\": \"integer\"},\r",
							"        \"qa_salary_after_6_months\": {\"type\": \"integer\"},\r",
							"        \"start_qa_salary\": {\"type\": \"integer\"}\r",
							"    }\r",
							"};\r",
							"//Проверка структуры json в ответе\r",
							"pm.test(\"Schema is valid\", function(){\r",
							"    pm.response.to.have.jsonSchema(schema);\r",
							"})\r",
							"//Проверка правильности результата перемножения\r",
							"pm.test(\"Check response body from request body\", function(){\r",
							"    pm.expect(jsonData.qa_salary_after_6_months).to.eql(requestData.salary*2);\r",
							"    pm.expect(jsonData.qa_salary_after_12_months).to.eql(requestData.salary*2.9);\r",
							"    pm.expect(jsonData.person.u_salary_1_5_year).to.eql(requestData.salary*4);\r",
							"});\r",
							"//Pначение из поля 'u_salary_1.5_year'\r",
							"pm.environment.set(\"u_salary_1.5_year\", jsonData.person.u_salary_1_5_year);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"age\": 10,\r\n    \"salary\": 10,\r\n    \"name\": \"str\",\r\n    \"auth_token\": \"{{token}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info"
					]
				}
			},
			"response": []
		},
		{
			"name": "new_data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"var schema = {\r",
							"    \"type\": \"object\" , \r",
							"    \"properties\": \r",
							"    {\r",
							"        \"age\" : {\"type\": \"integer\"},\r",
							"        \"name\": {\"type\": \"string\"},\r",
							"        \"salary\": {\"type\": \"array\"},\r",
							"    }\r",
							"};\r",
							"//Проверка структуры json в ответе\r",
							"pm.test(\"Schema is valid\", function(){\r",
							"    pm.response.to.have.jsonSchema(schema);\r",
							"});\r",
							"//Проверка правильности результата перемножения\r",
							"var jsonData = pm.response.json();\r",
							"var requestData =  request.data;\r",
							"pm.test(\"Check response body from request body\", function(){\r",
							"    pm.expect(Number(jsonData.salary[1])).to.eql(requestData.salary*2);\r",
							"    pm.expect(Number(jsonData.salary[2])).to.eql(requestData.salary*3);\r",
							"});\r",
							"//проверить, что 2-й элемент массива salary больше 1-го и 0-го\r",
							"pm.test(\"The second element is bigger\", function(){\r",
							"    if(jsonData.salary[2] > jsonData.salary[1] && jsonData.salary[0]){\r",
							"        console.log(\"The second element is bigger\");\r",
							"    }else{\r",
							"        console.log(\"The second element is smaller\");\r",
							"    }\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "10",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Danil",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "10",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/new_data",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"new_data"
					]
				}
			},
			"response": []
		},
		{
			"name": "test_pet_info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"var jsonData = pm.response.json();\r",
							"var requestData =  request.data;\r",
							"//Проверка структуры json в ответе.\r",
							"var schema = {\r",
							"    \"type\": \"object\" , \r",
							"    \"properties\": \r",
							"    {\r",
							"        \"age\" : {\"type\": \"number\"},\r",
							"        \"name\": {\"type\": \"string\"},\r",
							"        \"daily_food\": {\"type\": \"number\"},\r",
							"        \"daily_sleep\": {\"type\": \"number\"}\r",
							"    }\r",
							"};\r",
							"console.log(typeof(jsonData.daily_food));\r",
							"pm.test(\"Schema is valid\", function(){\r",
							"    pm.response.to.have.jsonSchema(schema);\r",
							"});\r",
							"//Проверке правильности  перемножения на коэффициент\r",
							"pm.test(\"Check response body from request body\", function(){\r",
							"    pm.expect(jsonData.daily_food).to.eql(requestData.weight*0.012);\r",
							"    pm.expect(jsonData.daily_sleep).to.eql(requestData.weight*2.5);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "10",
							"type": "text"
						},
						{
							"key": "weight",
							"value": "10",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Danil",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/test_pet_info",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"test_pet_info"
					]
				}
			},
			"response": []
		},
		{
			"name": "get_test_user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//Проверка структуры json в ответе.\r",
							"var schema = {\r",
							"    \"type\": \"object\" , \r",
							"    \"properties\": \r",
							"    {\r",
							"        \"age\" : {\"type\": \"string\"},\r",
							"        \"family\": {\"type\": \"object\"},\r",
							"        \"children\": {\"type\": \"array\"},\r",
							"        \"u_salary_1_5_year\": {\"type\": \"number\"},\r",
							"        \"name\": {\"type\": \"string\"},\r",
							"        \"salary\": {\"type\": \"number\"}\r",
							"    }\r",
							"};\r",
							"pm.test(\"Schema is valid\", function(){\r",
							"    pm.response.to.have.jsonSchema(schema);\r",
							"});\r",
							"var jsonData = pm.response.json();\r",
							"var requestData =  request.data;\r",
							"//Проверка что занчение поля\r",
							"pm.test(\"Check response body from request body\", function(){\r",
							"    pm.expect(jsonData.name).to.eql(requestData.name);\r",
							"    pm.expect(jsonData.age).to.eql(requestData.age);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "salary",
							"value": "{{u_salary_1.5_year}}",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "10",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Danil",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/get_test_user",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"get_test_user"
					],
					"query": [
						{
							"key": null,
							"value": "u_salary_1.5_year",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "currency",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var currencyDescription = jsonData[Object.keys(jsonData)[Math.floor(Math.random()*Object.keys(jsonData).length)]];\r",
							"console.log(currencyDescription.Cur_ID);\r",
							"//В объекте возьмите Cur_ID и передать через окружение\r",
							"if (currencyDescription.Cur_ID < 450){\r",
							"    currencyDescription.Cur_ID = 500;\r",
							"} else {\r",
							"    currencyDescription.Cur_ID\r",
							"}\r",
							"pm.environment.set(\"currencyDescriptionId\", currencyDescription.Cur_ID);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/currency",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"currency"
					]
				}
			},
			"response": []
		},
		{
			"name": "curr_byn",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "auth_token",
							"value": "/s34lfgbj/str/jjd909/16461kjkWpqc3651str97404evny",
							"type": "text"
						},
						{
							"key": "curr_code",
							"value": "357",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/curr_byn",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"curr_byn"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "token",
			"value": ""
		},
		{
			"key": "token",
			"value": ""
		}
	]
}